{
	"firstName" : { 
		"rules" : {
			"r.01" : { 
				"notEmpty" : true, 
				"error_code" : [ "firstName.100.01", "..." ], 
				"help_code" : [ "firstName.100.01", "..." ] 
			},
			"r.02" : { 
				"isAlphabetic" : true, 
				"error_code" : [ "firstName.100.02", "..." ], 
				"help_code" : [ "firstName.100.02", "..." ] 
			},
			"r.03" : { 
				"minimumLength" : "5", 
				"error_code" : [ "firstName.100.03", "..." ], 
				"help_code" : [ "firstName.100.03", "..." ] 
			},
			"r.04" : { 
				"maximumLength" : "10", 
				"error_code" : [ "firstName.100.04", "..." ], 
				"help_code" : [ "firstName.100.04", "..." ] 
			}
		},
		"display" : {
			"type" : "text",
			"minimumLength" : "5",
			"maximumLength" : "10",
			"placeHolder" : "enter the name"
		}
	},
	"mobileNumber" : {
		"rules" : {
			"r.05" : { 
				"notEmpty" : true, 
				"error_code" : "mobileNumber.100.01", 
				"help_code" : "mobileNumber.100.01"
			},
			"r.06" : { 
				"isNumeric" : true, 
				"error_code" : "mobileNumber.100.02", 
				"help_code" : "mobileNumber.100.02"
			},
			"r.07" : { 
				"length" : "10", 
				"error_code" : "mobileNumber.100.03", 
				"help_code" : "mobileNumber.100.03"
			},
		},
		"display" : {
			"type" : "string",
			"length" : "10",
			"placeHolder" : "enter the mobile number"
		}
	},
	"email" : {
		"rules" : {
			"r.08" : { 
				"containsExpectedFormat" : true, 
				"error_code" : [ "email.100.01", "..." ], 
				"help_code" : [ "email.100.01", "..." ]
			}
		},
		"display" : {
			"type" : "email",
			"placeHolder" : "enter the email id"
		}
	}
}



var count = 0;
for (var key in obj.form) {
  if (key.firstname) {
	if (key.rules) {
		if(key.r.01) {
			count++;
		}
	}
   
  }
}
console.log(count);






















int nullCondition = 0;
        int numberOfKeys = fieldValidationsFileJsonObject.keySet().size();
        if (numberOfKeys != nullCondition)
        {
            for(Object levelOneKey : fieldValidationsFileJsonObject.keySet())
            {
                logger.info(" [ " +levelOneKey+ " ] ");
                JSONObject levelTwoValues = jsonObjectCreator(fieldValidationsFileJsonObject.get(levelOneKey));
                int levelTwoKeysSize = levelTwoValues.keySet().size();
                if(levelTwoKeysSize != nullCondition)
                {
                    for(Object levelTwoKey : levelTwoValues.keySet()){
                        logger.info(" >>>>>>> [ " +levelTwoKey+ " ] ");
                        JSONObject levelThreeValues = jsonObjectCreator(levelTwoValues.get(levelTwoKey));
                        int levelThreeKeysSize = levelThreeValues.keySet().size();
                        if(levelThreeKeysSize != nullCondition)
                        {
                            for(Object levelThreeKey : levelThreeValues.keySet())
                            {
                                logger.info(" >>>>>>> >>>>>>> [ " +levelThreeKey+ " ] ");
                                if(levelThreeValues.get(levelThreeKey) != null && levelThreeValues.get(levelThreeKey).getClass().getName() == "org.json.simple.JSONObject")
                                {
                                    JSONObject levelFourValues = jsonObjectCreator(levelThreeValues.get(levelThreeKey));
                                    if(levelFourValues != null){
                                        int levelFourKeysSize = levelFourValues.keySet().size();
                                        if(levelFourKeysSize != nullCondition)
                                        {
                                            for(Object levelFourKey : levelFourValues.keySet())
                                            {
                                                logger.info(" >>>>>>> >>>>>>> >>>>>>> [ " +levelFourKey+ " ] ");

                                                if(levelFourValues.get(levelThreeKey) != null && levelFourValues.get(levelFourKey).getClass().getName() == "org.json.simple.JSONObject")
                                                {
                                                    JSONObject levelFiveValues = jsonObjectCreator(levelFourValues.get(levelThreeKey));
                                                    if(levelFiveValues != null){
                                                        int levelFiveKeysSize = levelFiveValues.keySet().size();
                                                        if(levelFiveKeysSize != nullCondition)
                                                        {
                                                            for(Object levelFiveKey : levelFiveValues.keySet())
                                                            {
                                                                logger.info(" >>>>>>> >>>>>>> >>>>>>> >>>>>>> [ " +levelFiveKey+ " ] Value : [ " + levelFiveValues.get(levelFiveKey) + " ] ");

                                                            }
                                                        }
                                                    }
                                                }
                                                else
                                                {
                                                    logger.info(" >>>>>>> >>>>>>> >>>>>>> >>>>>>> [ " + levelFourValues.get(levelFourKey) + " ] ");
                                                }
                                            }
                                        }
                                    }
                                }
                                else
                                {
                                    logger.info(" >>>>>>> >>>>>>> >>>>>>> [ " + levelThreeValues.get(levelThreeKey) + " ] ");
                                }
                            }
                        }
                    }

                }


            }
        }
